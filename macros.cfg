#####################################################################
#  Macros
#####################################################################
[gcode_macro _USER_VARIABLES2]
variable_verbose: True

# Speed control of the machine for all the macros
variable_travel_speed: 350
variable_z_drop_speed: 32

gcode:

[gcode_macro PRINT_START]
gcode:
   gcode:
    {% set BED = params.BED|default(100)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    {% set EXTRUDER = params.EXTRUDER|default(210)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(0)|float %}
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
   
    _USER_VARIABLES2
    {% set St = printer["gcode_macro _USER_VARIABLES2"].travel_speed * 60 %}
    
    {% if (EXTRUDER_TEMP > 0) %}
	{% set EXTRUDER = EXTRUDER_TEMP %}
    {% endif %}

    {% if (BED_TEMP > 0) %}
	{% set BED = BED_TEMP %}
    {% endif %}
    
    {% set intro_x = printer.configfile.config["stepper_x"]["position_max"]|float * 0.66 %}
    {% set min_x = printer.configfile.config["stepper_x"]["position_min"]|float * 0.1 %}
    {% set min_y = printer.configfile.config["stepper_y"]["position_min"]|float %}

    STATUS_BUSY
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160        ; set extruder temp to 160 for QGL w/o oozing
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED}    ; set bed temp
    SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE=0
    CLEAR_PAUSE
    M117 Start up...
    G21          ; set to mm
    M220 S100	 ; set print speed to 100%
    M221 S100	 ; set flow rate to 100%
    M107         ; disable fans
    G90          ; absolute positioning
    M117 Pre-print park
    G28
    G0 X175 Y175 Z20 F10000
    M117 Preheating
    STATUS_HEATING
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED}         ; wait for bed temp
    STATUS_READY
    M117 Homing & QGL
    G32                                                      ; home
    M117 Loading mesh
    BED_MESH_PROFILE LOAD=default                            ; load default mesh
    STATUS_CLEANING
    CLEAN_NOZZLE                      ; clean nozzle
    STATUS_CALIBRATING_Z
    CALIBRATE_Z
    SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE=1
    STATUS_HEATING
    M117 Heating to {EXTRUDER}C
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER}      ; wait for extruder temp
    SET_FAN_SPEED FAN=chamber_fan SPEED=0.5
    ; Apply offset for textured plate that is lower than sensor probed
    TEXTURED_PLATE_OFFSET
    STATUS_PRINTING
    PRIME_LINE
    M117


[gcode_macro PRIME_LINE]
gcode:
    # Set vars
    {% set St = printer["gcode_macro _USER_VARIABLES2"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES2"].z_drop_speed * 60 %}

    G90
    M83
    G92 E0.0
    G1 Z5 F{Sz}

    ; Starting position
    G1 X2.5 Y20 F{St}
    G1 Z0.3 F{Sz|int / 2}

    ; Add pressure in the nozzle
    G92 E0
    G0 E18 F300

    ; Prime line
    G92 E0
    G1 Y100 E10 F2500
    G92 E0
    G1 Y150 E5 F1500

    ; Retract and Z-hop
    G92 E0
    G1 Z2.0 E-0.1 F{Sz}
    G92 E0
    G1 Z5 F{Sz}

[gcode_macro PRINT_END]
description: Stop the print and filter the atmosphere for 10min before shuting down
gcode:
    M400
    PARK E=10
    TURN_OFF_HEATERS
    M107
    BED_MESH_CLEAR
    M84
    STATUS_READY

[gcode_macro PARK]
description: Park the toolhead at the back and retract some filament if the nozzle is hot
gcode:
    {% set E = params.E|default(1.7)|float %}

    {% set x_park = printer.toolhead.axis_minimum.x|float + 150.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 30.0 %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}

    {% set St = printer["gcode_macro _USER_VARIABLES2"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES2"].z_drop_speed * 60 %}

    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 50.0) %}
        {% set z_safe = 50.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}

    {% if printer.extruder.temperature > 185 %}
        G1 E-{E} F2100
    {% endif %}

    G91    
    G1 Z{z_safe} F{Sz}
    G90
    G0 X{x_park} Y{y_park} F{St}

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    STATUS_HOMING
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_HOMING
    G28
    STATUS_READY

[gcode_macro G29]
gcode:
    G32
    STATUS_MESHING
    BED_MESH_CALIBRATE
    STATUS_READY

# load filament
[gcode_macro LOAD_FIL]
gcode:
    SAVE_GCODE_STATE NAME=loading_filament
    M117 Loading Filament
    M83
    G92 E0.0
    G1 E50 F200
    G1 E50 F100
    G92 E0.0
    M117
    RESTORE_GCODE_STATE NAME=loading_filament

# unload filament
[gcode_macro UNLOAD_FIL]
gcode:
    SAVE_GCODE_STATE NAME=unloading_filament
    M117 Unloading Filament
    G91 # set relative
    G92 E0.0
    G1 E-100 F200
    G92 E0.0
    M117
    RESTORE_GCODE_STATE NAME=unloading_filament

[gcode_macro _RUNOUT_INFO]
gcode:
  {% if 'filament_motion_sensor runout' in printer.configfile.settings %}
    #{% set enable = printer['filament_motion_sensor btt_sensor'].enabled %}
    #{% set detect = printer['filament_motion_sensor btt_sensor'].filament_detected %}
    {% set enable = true %}
    {% set detect = true %}
    {action_respond_info("RUNOUT Motion Sensor:
                          Enabled: %s
                          Detect Filament: %s" % (enable|lower,detect|lower))}
  {% endif %}


[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
	{% set bound = params.BOUND|default(20)|int %}
	# Size for small pattern box
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	# Large pattern
		# Max positions, inset by BOUND
		{% set x_min = printer.toolhead.axis_minimum.x + bound %}
		{% set x_max = printer.toolhead.axis_maximum.x - bound %}
		{% set y_min = printer.toolhead.axis_minimum.y + bound %}
		{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	# Small pattern at center
		# Find X/Y center point
		{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
		{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
		
		# Set small pattern box around center point
		{% set x_center_min = x_center - (smallpatternsize/2) %}
		{% set x_center_max = x_center + (smallpatternsize/2) %}
		{% set y_center_min = y_center - (smallpatternsize/2) %}
		{% set y_center_max = y_center + (smallpatternsize/2) %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Output parameters to g-code terminal
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
		# Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
		G90
		G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
		G28 X Y
		G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000 
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	{% for i in range(iterations) %}
		# Large pattern
			# Diagonals
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			
			# Box
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
		
		# Small pattern
			# Small diagonals 
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			
			# Small box
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

	# Re-home and get position again for comparison:
		G28 X Y
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G90
		G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000 
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED
